---
title: "First notebook"
author: "Kevin Rue"
format: html
---

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(lubridate)
```


## Import data

```{r}
glucose_data <- read_csv("../data/KevinRue_glucose_21-5-2025.csv", skip = 1, show_col_types = FALSE)
```

## Time series

### Global

```{r}
#| echo: false
plot_data <- glucose_data %>% 
  select(`Device Timestamp`, `Historic Glucose mmol/L`) %>% 
  mutate(
     `Device Timestamp` = as_datetime(dmy_hm(`Device Timestamp`))
  ) %>% 
  filter(!is.na(`Historic Glucose mmol/L`))
nights_start <- ymd_hm(paste(seq(as.Date(min(plot_data$`Device Timestamp`))-1, as.Date(max(plot_data$`Device Timestamp`)), 1), "22:00"))
nights_end <- ymd_hm(paste(seq(as.Date(min(plot_data$`Device Timestamp`)), as.Date(max(plot_data$`Device Timestamp`))+1, 1), "06:00"))
if (min(plot_data$`Device Timestamp`) > nights_end[1]) {
  nights_start <- nights_start[-1]
  nights_end <- nights_end[-1]
}
if (max(plot_data$`Device Timestamp`) < nights_start[length(nights_start)]) {
  nights_start <- nights_start[-length(nights_start)]
  nights_end <- nights_end[-length(nights_end)]
}
ggplot(plot_data) +
  annotate(
    geom = "rect",
    xmin = nights_start,
    xmax = nights_end,
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = min(plot_data$`Device Timestamp`),
    xmax = max(plot_data$`Device Timestamp`),
    ymin = 3, ymax = 10,
    fill = "palegreen", alpha = 0.5) +
  geom_line(aes(`Device Timestamp`, `Historic Glucose mmol/L`)) +
  scale_x_datetime(
    expand = c(0, 0, 0, 0),
    oob = scales::squish_infinite, date_breaks = "day", date_labels = "%d %b"
  ) +
  scale_y_continuous(limits = c(0, 21), breaks = seq(0, 21, 3)) +
  theme(
    axis.text.x = element_text(angle = 90)
  ) +
  theme_bw() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank()
  )
```

### Overlay days

```{r}
#| echo: false
glucose_data %>% 
  select(`Device Timestamp`, `Historic Glucose mmol/L`) %>% 
  separate(`Device Timestamp`, c("Date", "Time"), sep = " ") %>% 
  mutate(
    `Device Timestamp` = as_datetime(ymd_hm(paste(Sys.Date(), Time)))
  ) %>% 
  filter(!is.na(`Historic Glucose mmol/L`)) %>% 
  ggplot() +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "00:00")),
    xmax = ymd_hm(paste(Sys.Date(), "06:00")),
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "22:00")),
    xmax = ymd_hm(paste(Sys.Date() + 1, "00:00")),
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "00:00")),
    xmax = ymd_hm(paste(Sys.Date() + 1, "00:00")),
    ymin = 3, ymax = 10,
    fill = "palegreen", alpha = 0.5) +
  geom_line(aes(`Device Timestamp`, `Historic Glucose mmol/L`, group = Date)) +
  scale_x_datetime(
    date_label = "%H:%M",
    expand = c(0, 0, 0, 0),
    oob = scales::squish_infinite
  ) +
  scale_y_continuous(limits = c(0, 21), breaks = seq(0, 21, 3)) +
  theme_bw() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank()
  ) +
  theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"))
```

### Filter dates

- 17 May is an outlier with a 2am breakfast and trip to the airport.

```{r}
#| echo: false
exclude_dates <- "17-05-2025"
glucose_data %>% 
  select(`Device Timestamp`, `Historic Glucose mmol/L`) %>% 
  separate(`Device Timestamp`, c("Date", "Time"), sep = " ") %>% 
  filter(!Date %in% exclude_dates) %>% 
  mutate(
    `Device Timestamp` = as_datetime(ymd_hm(paste(Sys.Date(), Time)))
  ) %>% 
  filter(!is.na(`Historic Glucose mmol/L`)) %>% 
  ggplot() +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "00:00")),
    xmax = ymd_hm(paste(Sys.Date(), "06:00")),
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "22:00")),
    xmax = ymd_hm(paste(Sys.Date() + 1, "00:00")),
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "00:00")),
    xmax = ymd_hm(paste(Sys.Date() + 1, "00:00")),
    ymin = 3, ymax = 10,
    fill = "palegreen", alpha = 0.5) +
  geom_line(aes(`Device Timestamp`, `Historic Glucose mmol/L`, group = Date)) +
  scale_x_datetime(
    date_label = "%H:%M",
    expand = c(0, 0, 0, 0),
    oob = scales::squish_infinite
  ) +
  scale_y_continuous(limits = c(0, 21), breaks = seq(0, 21, 3)) +
  theme_bw() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank()
  ) +
  theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"))
```

### Annotate dates

```{r}
#| echo: false
#| fig-height: 9
#| fig-width: 7
date_annotations <- read_csv("../data/date_annotations.csv", col_names = c("date", "type"), show_col_types = FALSE)
glucose_data %>% 
  select(`Device Timestamp`, `Historic Glucose mmol/L`) %>% 
  separate(`Device Timestamp`, c("Date", "Time"), sep = " ") %>% 
  left_join(date_annotations, c("Date" = "date")) %>% 
  mutate(
    `Device Timestamp` = as_datetime(ymd_hm(paste(Sys.Date(), Time)))
  ) %>% 
  filter(!is.na(`Historic Glucose mmol/L`)) %>% 
  ggplot() +
  facet_wrap(~type, ncol = 1) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "00:00")),
    xmax = ymd_hm(paste(Sys.Date(), "06:00")),
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "22:00")),
    xmax = ymd_hm(paste(Sys.Date() + 1, "00:00")),
    ymin = -Inf, ymax = Inf,
    fill = "lightgrey", alpha = 0.5) +
  annotate(
    geom = "rect",
    xmin = ymd_hm(paste(Sys.Date(), "00:00")),
    xmax = ymd_hm(paste(Sys.Date() + 1, "00:00")),
    ymin = 3, ymax = 10,
    fill = "palegreen", alpha = 0.5) +
  geom_line(aes(`Device Timestamp`, `Historic Glucose mmol/L`, group = Date, colour = type)) +
  scale_x_datetime(
    date_label = "%H:%M",
    expand = c(0, 0, 0, 0),
    oob = scales::squish_infinite
  ) +
  scale_y_continuous(limits = c(0, 21), breaks = seq(0, 21, 3)) +
  theme_bw() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank()
  ) +
  theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"))
```
